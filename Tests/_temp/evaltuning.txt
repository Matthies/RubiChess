kd7: knight base und diff mehrfach retuned mit texeltune-kd.pgn.fenmove ohne ratio
0.1129970460 -> 0.1125521972  (-> 0.1125444100 Rest von diff nicht in kd7 enthalten)
Ergebnis:
Score of RubiChess-Bitboard-kd7 vs RubiChess-Bitboard-ms: 316 - 354 - 330  [0.481] 1000
Elo difference: -13.21 +/- 17.62
SPRT: llr -0.971, lbound -2.2, ubound 2.2

kd8: alle sonstigen Werte einfach retuned mit texeltune-kd.pgn.fenmove ohne ratio
0.1125444100 -> 0.1123812592
Ergebnis:
Score of RubiChess-Bitboard-kd8 vs RubiChess-Bitboard-ms: 328 - 348 - 324  [0.490] 1000
Elo difference: -6.95 +/- 17.70
SPRT: llr -0.579, lbound -2.2, ubound 2.2

kd9: base[0] retuned
0.1123812592 -> 0.1121354827
Score of RubiChess-Bitboard-kd9 vs RubiChess-Bitboard-ms: 311 - 372 - 317  [0.469] 1000
Elo difference: -21.22 +/- 17.80
SPRT: llr -1.44, lbound -2.2, ubound 2.2

kd9b: schlechte base[0] rückgägngig + base[1] erneut fast (bis 56) komplett getuned
Score of RubiChess-Bitboard-kd9b vs RubiChess-Bitboard-ms: 325 - 352 - 323  [0.486] 1000
Elo difference: -9.38 +/- 17.71
SPRT: llr -0.727, lbound -2.2, ubound 2.2

kb10b: immer noch ohne schlechte base[0] bis einschließlich base[2] getuned
-> 0.1119619597
Score of RubiChess-Bitboard-kd10b vs RubiChess-Bitboard-ms: 329 - 403 - 268  [0.463] 1000
Elo difference: -25.76 +/- 18.45
SPRT: llr -1.6, lbound -2.2, ubound 2.2

Schluss jetzt. Das wird immer schlechter!

kd11: Nur die neuen mit texeltune-08-20000 getuned
CONSTEVAL int knightmobilitybonus =     0;
CONSTEVAL int kingattackweight[7] = {     0,    0,    1,   -2,    3,    9,    0  };
Score of RubiChess-Bitboard-kd11 vs RubiChess-Bitboard-ms: 98 - 111 - 91  [0.478] 300
Elo difference: -15.06 +/- 32.88
SPRT: llr -0.313, lbound -2.2, ubound 2.2

kdl1: kingdanger wird nicht mit attackers multipliziert
CONSTEVAL int knightmobilitybonus =     0;
CONSTEVAL int kingattackweight[7] = {     0,    0,    3,   -4,    6,   18,    0  };
Score of RubiChess-Bitboard-kdl1 vs RubiChess-Bitboard-ms: 125 - 139 - 136  [0.482] 400
Elo difference: -12.17 +/- 27.69
SPRT: llr -0.368, lbound -2.2, ubound 2.2

kr1: kein kingshield in der dangerarea aber wieder mit attackers multipliziert
CONSTEVAL int knightmobilitybonus =     0;
CONSTEVAL int kingattackweight[7] = {     0,    0,    0,   -1,    3,   16,    0  };
Score of RubiChess-Bitboard-kr1 vs RubiChess-Bitboard-ms: 300 - 352 - 348  [0.474] 1000
Elo difference: -18.08 +/- 17.39
SPRT: llr -1.31, lbound -2.2, ubound 2.2

kr2: kein kingshield in der dangerarea und nicht mit attackers multiplizieren
CONSTEVAL int knightmobilitybonus =     0;
CONSTEVAL int kingattackweight[7] = {     0,    0,   -1,   -3,    5,   33,    0  };
Score of RubiChess-Bitboard-kr2 vs RubiChess-Bitboard-ms: 252 - 264 - 314  [0.493] 830
Elo difference: -5.02 +/- 18.63
SPRT: llr -0.416, lbound -2.2, ubound 2.2


Scheinbar spielt die Phase eine Rolle; Ergebnisse bisher zeigen "frühe Siege und späte Niederlagen"
kdph1: attackers > 1, attackers werden multipiliziert, kindanger immer noch ohne kingshield
CONSTEVAL int kingattackweight[7] = { 0,    0,    1,    1,   10,   11,    0 };
Score of RubiChess-Bitboard-kdph1 vs RubiChess-Bitboard-ms: 331 - 294 - 375  [0.518] 1000
Elo difference: 12.86 +/- 17.02
SPRT: llr 0.687, lbound -2.2, ubound 2.2

kdph2: wie vorher, aber mit texeltune-kd getuned (ratio immer noch 3)
CONSTEVAL int kingattackweight[7] = {     0,    0,    8,    5,    8,   20,    0  };
(ratio 1 liefert CONSTEVAL int kingattackweight[7] = {     0,    0,    6,    3,   10,   22,    0  };)
Score of RubiChess-Bitboard-kdph2 vs RubiChess-Bitboard-ms: 358 - 284 - 358  [0.537] 1000
Elo difference: 25.76 +/- 17.26
SPRT: llr 1.5, lbound -2.2, ubound 2.2
kdph2 is new master for coming tests
Nachträglich LTC 60+0.6 (GRAUSAM!)
Score of RubiChess-Bitboard-kdph2 vs RubiChess-Bitboard-ms: 56 - 88 - 109  [0.437] 253
Elo difference: -44.18 +/- 32.41
SPRT: llr -0.868, lbound -2.2, ubound 2.2
Ev. führt das TM bei dieser TC immer zu einer etwas geringeren Tiefe und damit zu weniger TT-Einträgen??
Werde eine weitere TC testen...
Wieder 10+0.1 aber 8movesv3:
Score of RubiChess-Bitboard-kdph2 vs RubiChess-Bitboard-ms: 175 - 175 - 250  [0.500] 600
Elo difference: 0.00 +/- 21.23
SPRT: llr -0.107, lbound -2.2, ubound 2.2
Und nochmal den normalen STC:
Score of RubiChess-Bitboard-kdph2 vs RubiChess-Bitboard-ms: 279 - 299 - 322  [0.489] 900
Elo difference: -7.72 +/- 18.18
SPRT: llr -0.593, lbound -2.2, ubound 2.2
Was ist da bei dem +25ELO-Test passiert???

kdph3: mit erweiterter kingattack area und neu getuned mit texeltune-kd getuned ratio 3 (ratio 1 ergibt dasselbe)
CONSTEVAL int kingattackweight[7] = {     0,    0,    6,   -1,    8,   14,    0  };
Score of RubiChess-Bitboard-kdph3 vs RubiChess-Bitboard-kdph2: 318 - 308 - 374  [0.505] 1000
Elo difference: 3.47 +/- 17.03
SPRT: llr 0.0645, lbound -2.2, ubound 2.2
Ist das was? Nicht ganz eindeutig. Ggf. verfeinern (eigene Gewichte für kingshield) und weiter untersuchen.
Nochmal 20+0.2 gegen Master: extreme Schwankungen... nach 400 Spielen zunächst +30 (0.535), dann nach 750 Spielen negativ
Score of RubiChess-Bitboard-kdph3 vs RubiChess-Bitboard-ms: 248 - 250 - 302  [0.499] 800
Elo difference: -0.87 +/- 18.99
SPRT: llr -0.179, lbound -2.2, ubound 2.2

Jetzt versuche ich es mit Attack units
kdau1 (mit texeltune-kd getuned ratio 3)
CONSTEVAL int KingSafetyFactor = 377;
CONSTEVAL int kingattackweight[7] = { 0,    0,    3,    1,    3,   5,    0 };
Score of RubiChess-Bitboard-kdau1 vs RubiChess-Bitboard-ms: 1719 - 1741 - 1833  [0.498] 5293
Elo difference: -1.44 +/- 7.56
SPRT: llr -1.32, lbound -2.2, ubound 2.2

kdau2 (mit texeltune-08-20000 getuned ratio 3)
CONSTEVAL int KingSafetyFactor = 286;
CONSTEVAL int kingattackweight[7] = { 0,    0,    2,    2,    3,   5,    0 };
Test auf vier Rechnern:

1. IBM 8-Kern Server:
Score of RubiChess-Bitboard-kdau2 vs RubiChess-Bitboard-ms: 893 - 775 - 906  [0.523] 2574
Elo difference: 15.94 +/- 10.80
SPRT: llr 2.21, lbound -2.2, ubound 2.2 - H1 was accepted
LTC:
Score of RubiChess-Bitboard-kdau2 vs RubiChess-Bitboard-ms: 609 - 510 - 918  [0.524] 2037
Elo difference: 16.90 +/- 11.17
SPRT: llr 2.22, lbound -2.2, ubound 2.2 - H1 was accepted

2. PC-Ben:
Score of RubiChess-Bitboard-kdau2 vs RubiChess-Bitboard-ms: 954 - 841 - 1216  [0.519] 3011
Elo difference: 13.05 +/- 9.57
SPRT: llr 2.21, lbound -2.2, ubound 2.2 - H1 was accepted
3. Fujitsu-Notebook:
Score of RubiChess-Bitboard-kdau2 vs RubiChess-Bitboard-ms: 1923 - 1866 - 2094  [0.505] 5883
Elo difference: 3.37 +/- 7.12
SPRT: llr 0.328, lbound -2.2, ubound 2.2

kdaufix: Für die Dame wurde nuir eine Richtung in die kingsafety-Attacke einberechnet, das ist korrigiert.
CONSTEVAL int KingSafetyFactor = 286;
CONSTEVAL int kingattackweight[7] = { 0,    0,    2,    2,    3,   5,    0 };
CONSTEVAL int KingSafetyFactor =   286;
CONSTEVAL int shiftmobilitybonus =     3;
Score of kdaufix vs RubiChess-Bitboard-qs1newmaster: 349 - 339 - 312  [0.505] 1000
Elo difference: 3.47 +/- 17.85
SPRT: llr 0.0587, lbound -1.39, ubound 1.39

kdaufix2: Retuned mit 08-20000:
CONSTEVAL int kingattackweight[7] = {     0,    0,    1,    3,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   285;
CONSTEVAL int shiftmobilitybonus =     2;
Score of kdaufix2 vs RubiChess-Bitboard-ms: 211 - 205 - 196  [0.505] 612
Elo difference: 3.41 +/- 22.69
SPRT: llr 0.0338, lbound -1.39, ubound 1.39

kdaufix2b: Retuned mit 08-20000 und shiftmobility fest auf 3:
CONSTEVAL int kingattackweight[7] = {     0,    0,    0,    3,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   287;
Score of kdaufix2b vs RubiChess-Bitboard-ms: 61 - 76 - 65  [0.463] 202
Elo difference: -25.85 +/- 39.63
SPRT: llr -0.35, lbound -1.39, ubound 1.39

kdaufix2c: Retuned mit 08-20000 und kein mobility Bonus für Springer:
CONSTEVAL int kingattackweight[7] = {     0,    0,    2,    2,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   287;
Score of kdaufix2c vs RubiChess-Bitboard-ms: 346 - 335 - 328  [0.505] 1009
Elo difference: 3.79 +/- 17.60
SPRT: llr 0.0797, lbound -1.39, ubound 1.39

kdaufix3: Retuned mit kd:
CONSTEVAL int kingattackweight[7] = {     0,    0,    2,    3,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   287;
CONSTEVAL int shiftmobilitybonus =     2;
Score of kdaufix3 vs RubiChess-Bitboard-ms: 171 - 187 - 147  [0.484] 505
Elo difference: -11.01 +/- 25.53
SPRT: llr -0.399, lbound -1.39, ubound 1.39

kdaufix3b: Retuned mit kd und shiftmobility fest auf 3: Bench 8067271
CONSTEVAL int kingattackweight[7] = {     0,    0,    2,    2,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   287;
10+0.1:
Score of kdaufix3b vs RubiChess-Bitboard-ms: 720 - 642 - 726  [0.519] 2088
Elo difference: 12.98 +/- 12.03
SPRT: llr 1.39, lbound -1.39, ubound 1.39 - H1 was accepted
60+0.6:
Score of kdaufix3b vs RubiChess-Bitboard-ms: 486 - 416 - 559  [0.524] 1461
Elo difference: 16.66 +/- 13.99
SPRT: llr 1.39, lbound -1.39, ubound 1.39 - H1 was accepted

kdaufix3c: Retuned mit kd und kein mobility Bonus für Springer
CONSTEVAL int kingattackweight[7] = {     0,    0,    3,    1,    3,    4,    0  };
CONSTEVAL int KingSafetyFactor =   287;
Score of RubiChess-Bitboard-kdaufix3c vs RubiChess-Bitboard-ms: 241 - 233 - 263  [0.505] 737
Elo difference: 3.77 +/- 20.11
SPRT: llr 0.0604, lbound -1.39, ubound 1.39


Neue Baustelle: Passed-/Connected pawns
pp1: // getuned mit texeltune-kd.pgn.fenmove -tuningratio 3 mit niedrigen Werten gestartet
CONSTEVAL int connectedpasser = 7;
CONSTEVAL int passedpawnbonus[8] = { 0,   24,   11,   42,   78,  133,  141,    1 };
10+0.1 auf IBM nach 1000 Spielen:
Score of pp1 vs RubiChess-Bitboard-ms: 321 - 331 - 350  [0.495] 1002
Elo difference: -3.47 +/- 17.34
SPRT: llr -0.381, lbound -2.2, ubound 2.2
Auf (teilweise zusätzlich verwendetem) Notebook vielversprechend:
Score of RubiChess-Bitboard-pp1 vs RubiChess-Bitboard-ms: 819 - 775 - 918  [0.509] 2512
Elo difference: 6.09 +/- 10.81
SPRT: llr 0.588, lbound -1.39, ubound 1.39
--> sollte nochmal getestet werden...

pp2: // getuned mit texeltune-08-20000.pgn.fenmove -tuningratio 3 mit niedrigen Werten gestartet
CONSTEVAL int connectedpasser =     4;
CONSTEVAL int passedpawnbonus[8] = {     0,   23,   14,   38,   70,  132,  157,    1  };
Score of pp2 vs RubiChess-Bitboard-ms: 199 - 220 - 239  [0.484] 658
Elo difference: -11.09 +/- 21.18
SPRT: llr -0.582, lbound -2.2, ubound 2.2


Nächste Baustelle: Pinning (Springer - Dame, nur Schach)
pin1: (mit kd getuned)
CONSTEVAL int pinnedpenalty = -39;
CONSTEVAL int shiftmobilitybonus = 2;
CONSTEVAL int slideronfreefilebonus[2] = { 18,   23 };
Nach mal wieder vielversprechendem Start geht es den Bach runter:
Score of pin1 vs RubiChess-Bitboard-ms: 114 - 130 - 156  [0.480] 400
Elo difference: -13.90 +/- 26.61
SPRT: llr -0.446, lbound -2.2, ubound 2.2

pin2: (mit 08-20000 getuned)
CONSTEVAL int pinnedpenalty =   -32;
CONSTEVAL int shiftmobilitybonus =     3;
CONSTEVAL int slideronfreefilebonus[2] = {    12,   16  };  // ratio=1 ergibt {13,16}
Score of pin2 vs RubiChess-Bitboard-ms: 477 - 477 - 546  [0.500] 1500
Elo difference: 0.00 +/- 14.01
SPRT: llr -0.244, lbound -2.2, ubound 2.2

pin3: komplexe Lösung getuned mit 08-20000
CONSTEVAL int pinnedpenalty[7] = { 0,    1,  -26,  -21,   -2, -380,    0 };
CONSTEVAL int shiftmobilitybonus = 3;
CONSTEVAL int slideronfreefilebonus[2] = { 12,   16 };
Score of pin3 vs RubiChess-Bitboard-qs1newmaster: 131 - 229 - 172  [0.408] 532
Elo difference: -64.74 +/- 24.51
SPRT: llr -2.21, lbound -2.2, ubound 2.2 - H0 was accepted
Seltsam schlecht; ist da noch ein Bug oder Denkfehler??

pin4: komplexe Lösung mit kd getuned
CONSTEVAL int pinnedpenalty[7] = {     0,    1,  -34,  -19,  -23, -304,    0  };
CONSTEVAL int shiftmobilitybonus =     3;
CONSTEVAL int slideronfreefilebonus[2] = {    15,   20  };
Score of pin4 vs RubiChess-Bitboard-qs1newmaster: 47 - 80 - 73  [0.417] 200
Elo difference: -57.86 +/- 38.71
SPRT: llr -0.795, lbound -2.2, ubound 2.2

pin5: noch weiter mit kd getuned
CONSTEVAL int pinnedpenalty[7] = { 0,    1,  -37,  -24,  -29, -323,    0 };
CONSTEVAL int shiftmobilitybonus = 2;
CONSTEVAL int slideronfreefilebonus[2] = { 18,   24 };

pin6: komplexe Lösung, die Mobilitybonus nicht ausschließt, mit kd getuned
CONSTEVAL int pinnedpenalty[7] = {     0,    1,  -37,  -34,  -55, -459,    0  };
CONSTEVAL int shiftmobilitybonus =     2;
CONSTEVAL int slideronfreefilebonus[2] = {    18,   24  };
Score of pin6 vs RubiChess-Bitboard-qs1newmaster: 39 - 64 - 52  [0.419] 155
Elo difference: -56.53 +/- 45.08
SPRT: llr -0.574, lbound -2.2, ubound 2.2

pin7: wie pin6 mit 08-20000 getuned
CONSTEVAL int pinnedpenalty[7] = {     0,    1,  -29,  -36,  -34, -321,    0  };
CONSTEVAL int shiftmobilitybonus =     2;
CONSTEVAL int slideronfreefilebonus[2] = {    16,   20  };


pin9: Deutlich kleinere Penalty für gepinnte Dame: Bench 23618740
CONSTEVAL int pinnedpenalty[7] = { 0,    1,  -26,  -37,  -31, -60,    0 };
Score of pin9 vs RubiChess-Bitboard-qs1newmaster: 255 - 258 - 257  [0.498] 770
Elo difference: -1.35 +/- 20.02
SPRT: llr -0.184, lbound -2.2, ubound 2.2
schon deutlich besser

pin10:
CONSTEVAL int pinnedpenalty[7] = { 0,    1,  -26,  -37,  -31, -100,    0 };
und Mobility wieder ausgeschlossen für gepinnte Figuren
Score of pin10 vs RubiChess-Bitboard-qs1newmaster: 109 - 151 - 142  [0.448] 402
Elo difference: -36.43 +/- 27.40
SPRT: llr -1.01, lbound -2.2, ubound 2.2
wieder deutlich schlechter

pin11:
Mobility ausgeschlossen, aber ohne (echte) penalty: -1
Performt mies.

pin12: Mobility bleibt erhalten; Placebo-Penalty für Pinning:
CONSTEVAL int pinnedpenalty[7] = { 0,    0,  -2,  -2,  -3, -5,    0 };
sieht ganz gut aus... später doch nicht
Score of pin12 vs RubiChess-Bitboard-qs1newmaster: 972 - 1046 - 1180  [0.488] 3198
Elo difference: -8.04 +/- 9.56
SPRT: llr -2.21, lbound -2.2, ubound 2.2 - H0 was accepted

pin13: Placebo verdoppeln:
CONSTEVAL int pinnedpenalty[7] = { 0,    0,  -4,  -4,  -6, -10,    0 };
Score of pin13 vs RubiChess-Bitboard-qs1newmaster: 321 - 371 - 414  [0.477] 1106
Elo difference: -15.72 +/- 16.19
SPRT: llr -1.33, lbound -2.2, ubound 2.2
Wird das schlechter?? Hmm...

pin14: Placebo verdoppeln:
CONSTEVAL int pinnedpenalty[7] = { 0,    0,  -8,  -8,  -12, -20,    0 };

pin15: Placebo verdoppeln:
CONSTEVAL int pinnedpenalty[7] = { 0,    0,  -16,  -16,  -24, -40,    0 };
Score of pin15 vs RubiChess-Bitboard-qs1newmaster: 97 - 121 - 133  [0.466] 351
Elo difference: -23.79 +/- 28.70
SPRT: llr -0.617, lbound -2.2, ubound 2.2

pin16: Hand-getuned
CONSTEVAL int pinnedpenalty[7] = { 0,    0,  -16,  -26,  -16, -40,    0 };
Score of pin16 vs RubiChess-Bitboard-qs1newmaster: 58 - 60 - 82  [0.495] 200
Elo difference: -3.47 +/- 37.07
SPRT: llr -0.0839, lbound -1.39, ubound 1.39


Und noch eine Baustelle:
qs1: Kein patscore bei Schach!
Notebook 10+0.1
Score of RubiChess-Bitboard-qs1 vs RubiChess-Bitboard-ms: 109 - 48 - 90  [0.623] 247
Elo difference: 87.62 +/- 35.07
SPRT: llr 1.4, lbound -1.39, ubound 1.39 - H1 was accepted
Finished match
Notebook 60+0.6
Score of RubiChess-Bitboard-qs1 vs RubiChess-Bitboard-ms: 115 - 64 - 171  [0.573] 350
Elo difference: 50.99 +/- 26.05
SPRT: llr 1.4, lbound -1.39, ubound 1.39 - H1 was accepted
Das ist was GROßES!


Tuning in 0.10-dev
==================
Branch "tuningtest"
- zunächst geht es um die Prüfung von neuem Spielmaterial
  a. texeltune-09-bal: Master vom 4.6.2018 spielt gegen sich selbst 1+0.08 mit draw adjudication score 20
  b. texeltune-09-nda.pgn: Wie a. aber ohne draw adjudication bzw. score 0

tuned1: Alle Nicht-PSQT-Parameter getuned mit a. und ratio 4
 - Evaluation error: 0.1205830065 -> 0.1202283710 / -0.000355
STC gegen master:
Score of RubiChess-Bitboard-tuned1 vs RubiChess-Bitboard-ms: 655 - 565 - 638  [0.524] 1858
Elo difference: 16.84 +/- 12.80
SPRT: llr 1.39, lbound -1.39, ubound 1.39 - H1 was accepted

tuned2: Zusätzlich die PSQT-Parameter base und diff 1 loop
 - Evaluation error: 0.1202283710 -> 0.1193763334 / -0.000852
STC gegen tuned1:
Score of RubiChess-Bitboard-tuned2 vs RubiChess-Bitboard-tuned1: 1616 - 1507 - 1433  [0.512] 4556
Elo difference: 8.31 +/- 8.34
SPRT: llr 1.39, lbound -1.39, ubound 1.39 - H1 was accepted
LTC gegen master:
Score of RubiChess-Bitboard-tuned2 vs RubiChess-Bitboard-ms: 899 - 807 - 1007  [0.517] 2713
Elo difference: 11.79 +/- 10.36
SPRT: llr 1.4, lbound -1.39, ubound 1.39 - H1 was accepted

tuned3: wie tuned2 mit insgesamt vier loops psqt
 - Evaluation error: 0.1193763334 -> 0.1192345687/ -0.000142
Score of RubiChess-Bitboard-tuned3 vs RubiChess-Bitboard-tuned2: 1144 - 1144 - 1312  [0.500] 3600
Elo difference: 0.00 +/- 9.04
SPRT: llr -0.375, lbound -1.39, ubound 1.39
-> scheinbar keine weitere Verbesserung

tuned1b: Alle Nicht-PSQT-Parameter getuned mit b. und ratio 4
 - Evaluation error: 0.1206848750 -> 0.1203020625 / -0.000382
Score of RubiChess-Bitboard-tuned1b vs RubiChess-Bitboard-ms: 797 - 705 - 855  [0.520] 2357
Elo difference: 13.57 +/- 11.19
SPRT: llr 1.42, lbound -1.39, ubound 1.39 - H1 was accepted

tuned2b: Zusätzlich die PSQT-Parameter base und diff 1 loop
 - Evaluation error: 0.1203020625 -> 0.1194335538 / -0.000869
STC gegen tuned1:
Score of RubiChess-Bitboard-tuned2b vs RubiChess-Bitboard-tuned1b: 4246 - 4255 - 4127  [0.500] 12628
Elo difference: -0.25 +/- 4.97
SPRT: llr -1.4, lbound -1.39, ubound 1.39 - H0 was accepted
-> hmm.

Jetzt der Quervergleich tuned3 vs tuned3b:
Score of RubiChess-Bitboard-tuned3 vs RubiChess-Bitboard-tuned3b: 3413 - 3331 - 3256  [0.504] 10000
Elo difference: 2.85 +/- 5.58

===> wir nehmen tuned3 und texeltune-09-bal als Tuning-Spielmaterial


Letzter tune vor Version 1.0: Tuning mit texeltune-10.pgn und ratio 6
STC:
Score of RubiChess-Bitboard-tune10-1 vs RubiChess-Bitboard-ms: 788 - 694 - 735  [0.521] 2217
Elo difference: 14.74 +/- 11.82
SPRT: llr 1.4, lbound -1.39, ubound 1.39 - H1 was accepted
LTC: nicht sehr überzeugend
Score of RubiChess-Bitboard-tune10-1 vs RubiChess-Bitboard-ms: 924 - 871 - 1276  [0.509] 3071
Elo difference: 6.00 +/- 9.38
SPRT: llr 0.696, lbound -1.39, ubound 1.39
Auf dem PC von Ben ist nach 1000 Spielen STC gar kein ELO-Gewinn zu messen
-> Test gegen andere Gegner... ECE X3, Devel2.000, Delocto-1.6 sieht gut aus, 2x besser, einmal knapp schlechter als Master




